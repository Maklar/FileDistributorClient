<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ColorPicker.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="RemoveItem.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>128, 16</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAPAAA/+4ADkFkb2JlAGTAAAAAAf/bAEMA
        BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8f
        Hx8fH//bAEMBBwcHDQwNGBAQGBoVERUaHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f
        Hx8fHx8fHx8fHx8fH//AABEIASwBkAMBEQACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUG
        BwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQz
        YnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaH
        iImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy
        8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAAB
        AncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6
        Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqy
        s7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AM6v
        SOMKAFoAKAFoAKAHUAFAC0AAoAWgBRQAtACigAoAWgAoAWgBRQAtACigAoAWgBRQAtACigBRQAtAC0AA
        oAWgBaAFFAC0ALQAooAWgBaAFoAWgAoAUUAOFABQAtACigBaAFFABQAUAczQAUALQAUALQAUALQAooAW
        gAFAC0AKKAFoAUUAFAC0AKKACgBRQAtAC0AKKAFoAWgAAoAWgBRQAtAC0ALQAuKAFoAWgBQKAFxQAtAC
        gUAKBQAuKAFxQAYoAXFAC4oAcBQAYoAXFAC4oAXFABigBcUAcvigBcUAFACgUAFAC4oAWgBaADFAC0AK
        BQAtAABQAtAC4oAXFAC0AAFAC4oAXFAC4oAXFAC4oAXFAC4oAXFAC4oAMUAOxQAuKAFxQAYoAXFADgKA
        FxQAuKAFxQAoFACgUALigBcUALigBcUALigBcUALigBcUAGKAFxQAYoA5agAoAWgAoAWgBaAFoAKAFoA
        XFAC0AFAC0AKKAFoAWgBaAFxQAuKAFxQAuKADFAC4oAcBQAuKAFxQAuKAFAoAUCgBQKAFxQAuKAFxQAo
        FACgUAOxQAuKAFAoAUCgBcUALigBcUALigBQKAFxQAuKAFxQAuKADbQAuKAOTxQAuKQBimAuKQBimAuK
        AFxQAuKAFxQAYoAXFAC4oAXFAC4oAXFAC4oAXFACgUALigBcUALigBcUALigBQKAFxQAuKAFxQAuKAHA
        UALigBcUALigBQKAFAoAUCgB2KAFxQAuKAFAoAUCgBdtAC7aAF20ALtoAULQA7bQAu2gA20ALtoANtAH
        JUgDFAC4oAMUALigQuKBi4oAXFAC4oAMUALigBcUALigBwFAC4oAMUAOxQAoFACgUwFxQAuKAFxQAoFA
        CgUALigBcUAOxQAoFACgUAKBQAoFAChaAHbaAFC0AKFoAULQA4LQAoWgBQtAC7aAF20ALtoAcFoAXbQA
        u2gBdtAC7aAF20ALtoANtAHH4pAGKAFxQAuKAFxQAuKADFAC4oAXFAC4oAXFAC4oAXFAC4oAXFAC4oAU
        CgB2KAFxQAuKAFxQAuKAF20AOC0ALtoAULTAXbQAoWgBQtADttAChaAFC0AOC0AKFoAULQAoWgBwWgBQ
        tAChaAFC0AOC0AKFoAULQAoWgBdtADttAC7aAF20AG2gBdtAHGYpALigAxQAuKAFxQAuKAFxQAuKAFxQ
        AuKAFxQAuKAFxQAuKAFxQAuKBCgUAOAoAUCgBQtAChaAHBaAF20AKFoGOC0AKFoAULQA4LQAoWgBQtAD
        gtAChaAFC0wHBaAFC0AKFoAcFoAULQAoWgBQtADgtAChaAFC0AOC0AKFoAXbQAu2gBdtAC7aADbQBxWK
        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
        UgHCkA6kA6kIKACgYUALQB//2Q==
</value>
  </data>
</root>